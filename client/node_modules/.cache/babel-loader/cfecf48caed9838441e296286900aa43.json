{"ast":null,"code":"export function calculateWinner(squares) {\n  const lines = [[0, 1, 2, 3], [1, 2, 3, 4], [5, 6, 7, 8], [6, 7, 8, 9], [10, 11, 12, 13], [11, 12, 13, 14], [15, 16, 17, 18], [16, 17, 18, 19], [0, 5, 10, 15], [5, 10, 15, 20], [1, 6, 11, 16], [6, 11, 16, 21], [2, 7, 12, 17], [7, 12, 17, 22], [3, 8, 13, 18], [8, 13, 18, 23], [4, 9, 14, 19], [9, 14, 19, 24], [3, 7, 11, 15], [4, 8, 12, 16], [8, 12, 16, 20], [0, 6, 12, 18], [6, 12, 18, 24], [1, 7, 13, 19], [5, 11, 17, 23], [2, 8, 14, 20], [4, 10, 16, 22]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar concat = function (a, b, c, d, board) {\n  var result = board[a] + board[b] + board[c] + board[d];\n\n  switch (result) {\n    case \"xxxx\":\n      return board[d] === null ? [\"x\", d] : null;\n\n    case \"xxxnull\":\n      return board[c] === null ? [\"x\", c] : null;\n\n    case \"xxnullx\":\n      return board[b] === null ? [\"x\", b] : null;\n\n    case \"xnullxx\":\n      return board[a] === null ? [\"x\", a] : null;\n\n    case \"nullxxx\":\n      return board[d] === null ? [\"x\", d] : null;\n\n    case \"nullxx\":\n      return board[c] === null ? [\"x\", c] : null;\n\n    case \"nulx\":\n      return board[b] === null ? [\"x\", b] : null;\n\n    case \"nullx\":\n      return board[a] === null ? [\"x\", a] : null;\n\n    case \"oooo\":\n      return board[d] === null ? [\"o\", d] : null;\n\n    case \"ooonull\":\n      return board[c] === null ? [\"o\", c] : null;\n\n    case \"oonullo\":\n      return board[b] === null ? [\"o\", b] : null;\n\n    case \"onull\":\n      return board[a] === null ? [\"o\", a] : null;\n\n    case \"nullooo\":\n      return board[d] === null ? [\"o\", d] : null;\n\n    case \"nulloo\":\n      return board[c] === null ? [\"o\", c] : null;\n\n    case \"nullo\":\n      return board[b] === null ? [\"o\", b] : null;\n\n    case \"null\":\n      return board[a] === null ? [\"o\", a] : null;\n\n    default:\n      // Возвращаем null, если нет возможности сделать ход\n      return null;\n  }\n};\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\n}\nexport function getNextStep(board) {\n  var result; // Проверяем горизонтальные линии\n\n  for (var i = 0; i < 25; i += 5) {\n    for (var j = 0; j < 2; j++) {\n      // Двигаемся по горизонтали\n      result = concat(i + j, i + j + 1, i + j + 2, i + j + 3, board);\n      if (result) return result[1];\n    }\n  } // Проверяем вертикальные линии\n\n\n  for (i = 0; i < 5; i++) {\n    for (var k = 0; k < 10; k += 5) {\n      // Двигаемся по вертикали\n      result = concat(i + k, i + k + 5, i + k + 10, i + k + 15, board);\n      if (result) return result[1];\n    }\n  } // Проверяем диагонали\n\n\n  result = concat(0, 6, 12, 18, board);\n  if (result) return result[1];\n  result = concat(1, 7, 13, 19, board);\n  if (result) return result[1];\n  result = concat(4, 8, 12, 16, board);\n  if (result) return result[1];\n  result = concat(3, 7, 11, 15, board);\n  if (result) return result[1]; // Если нет возможности победить или блокировать победу противника,\n  // то ставим фишку в первую свободную клетку снизу вверх\n\n  for (i = 20; i >= 0; i--) {\n    if (board[i] === null && (i >= 20 || board[i + 5] !== null)) {\n      return i;\n    }\n  } // Если все клетки заняты, возвращаем null\n\n\n  return null;\n}\n/*\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}*/","map":{"version":3,"sources":["C:/Users/79152/Универ/3курс/ТКП3к1с/4 в ряд/course-work/client/src/pages/GameUtils.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","d","concat","board","result","getRandomInt","min","max","Math","ceil","floor","random","getNextStep","j","k"],"mappings":"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","sourcesContent":["export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2, 3],\r\n        [1, 2, 3, 4],\r\n        [5, 6, 7, 8],\r\n        [6, 7, 8, 9],\r\n        [10, 11, 12, 13],\r\n        [11, 12, 13, 14],\r\n        [15, 16, 17, 18],\r\n        [16, 17, 18, 19],\r\n        [0, 5, 10, 15],\r\n        [5, 10, 15, 20],\r\n        [1, 6, 11, 16],\r\n        [6, 11, 16, 21],\r\n        [2, 7, 12, 17],\r\n        [7, 12, 17, 22],\r\n        [3, 8, 13, 18],\r\n        [8, 13, 18, 23],\r\n        [4, 9, 14, 19],\r\n        [9, 14, 19, 24],\r\n        [3, 7, 11, 15],\r\n        [4, 8, 12, 16],\r\n        [8, 12, 16, 20],\r\n        [0, 6, 12, 18],\r\n        [6, 12, 18, 24],\r\n        [1, 7, 13, 19],\r\n        [5, 11, 17, 23],\r\n        [2, 8, 14, 20],\r\n        [4, 10, 16, 22]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c, d] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nvar concat = function(a, b, c, d, board) {\r\n    var result = board[a] + board[b] + board[c] + board[d];\r\n    \r\n    switch (result) {\r\n        case \"xxxx\":\r\n            return board[d] === null ? [\"x\", d] : null;\r\n        case \"xxxnull\":\r\n            return board[c] === null ? [\"x\", c] : null;\r\n        case \"xxnullx\":\r\n            return board[b] === null ? [\"x\", b] : null;\r\n        case \"xnullxx\":\r\n            return board[a] === null ? [\"x\", a] : null;\r\n        case \"nullxxx\":\r\n            return board[d] === null ? [\"x\", d] : null;\r\n        case \"nullxx\":\r\n            return board[c] === null ? [\"x\", c] : null;\r\n        case \"nulx\":\r\n            return board[b] === null ? [\"x\", b] : null;\r\n        case \"nullx\":\r\n            return board[a] === null ? [\"x\", a] : null;\r\n        case \"oooo\":\r\n            return board[d] === null ? [\"o\", d] : null;\r\n        case \"ooonull\":\r\n            return board[c] === null ? [\"o\", c] : null;\r\n        case \"oonullo\":\r\n            return board[b] === null ? [\"o\", b] : null;\r\n        case \"onull\":\r\n            return board[a] === null ? [\"o\", a] : null;\r\n        case \"nullooo\":\r\n            return board[d] === null ? [\"o\", d] : null;\r\n        case \"nulloo\":\r\n            return board[c] === null ? [\"o\", c] : null;\r\n        case \"nullo\":\r\n            return board[b] === null ? [\"o\", b] : null;\r\n        case \"null\":\r\n            return board[a] === null ? [\"o\", a] : null;\r\n        default:\r\n            // Возвращаем null, если нет возможности сделать ход\r\n            return null;\r\n    }\r\n}\r\nexport function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n    //Максимум не включается, минимум включается\r\n}\r\nexport function getNextStep(board) {\r\n    var result;\r\n\r\n    // Проверяем горизонтальные линии\r\n    for (var i = 0; i < 25; i += 5) {\r\n        for (var j = 0; j < 2; j++) { // Двигаемся по горизонтали\r\n            result = concat(i + j, i + j + 1, i + j + 2, i + j + 3, board);\r\n            if (result) return result[1];\r\n        }\r\n    }\r\n\r\n    // Проверяем вертикальные линии\r\n    for (i = 0; i < 5; i++) {\r\n        for (var k = 0; k < 10; k += 5) { // Двигаемся по вертикали\r\n            result = concat(i + k, i + k + 5, i + k + 10, i + k + 15, board);\r\n            if (result) return result[1];\r\n        }\r\n    }\r\n\r\n    // Проверяем диагонали\r\n    result = concat(0, 6, 12, 18, board);\r\n    if (result) return result[1];\r\n    \r\n    result = concat(1, 7, 13, 19, board);\r\n    if (result) return result[1];\r\n\r\n    result = concat(4, 8, 12, 16, board);\r\n    if (result) return result[1];\r\n    \r\n    result = concat(3, 7, 11, 15, board);\r\n    if (result) return result[1];\r\n\r\n    // Если нет возможности победить или блокировать победу противника,\r\n    // то ставим фишку в первую свободную клетку снизу вверх\r\n    for (i = 20; i >= 0; i--) {\r\n        if (board[i] === null && (i >= 20 || board[i + 5] !== null)) {\r\n            return i;\r\n        }\r\n    }\r\n\r\n    // Если все клетки заняты, возвращаем null\r\n    return null;\r\n}\r\n/*\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}*/"]},"metadata":{},"sourceType":"module"}